<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boot.bootlanuch.dao.core.TBookInfoDao">
  <resultMap id="BaseResultMap" type="com.boot.bootlanuch.entity.core.TBookInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bookname" jdbcType="VARCHAR" property="bookname" />
    <result column="auto" jdbcType="VARCHAR" property="auto" />
    <result column="updatedate" jdbcType="DATE" property="updatedate" />
    <result column="insertdate" jdbcType="DATE" property="insertdate" />
    <result column="number" jdbcType="INTEGER" property="number" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bookname, auto, updatedate, insertdate, `number`
  </sql>
  <select id="selectByExample" parameterType="com.boot.bootlanuch.entity.core.TBookInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_book_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_book_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.boot.bootlanuch.entity.core.TBookInfoExample">
    delete from t_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.boot.bootlanuch.entity.core.TBookInfo" useGeneratedKeys="true">
    insert into t_book_info (bookname, auto, updatedate, 
      insertdate, `number`)
    values (#{bookname,jdbcType=VARCHAR}, #{auto,jdbcType=VARCHAR}, #{updatedate,jdbcType=DATE}, 
      #{insertdate,jdbcType=DATE}, #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.boot.bootlanuch.entity.core.TBookInfo" useGeneratedKeys="true">
    insert into t_book_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookname != null">
        bookname,
      </if>
      <if test="auto != null">
        auto,
      </if>
      <if test="updatedate != null">
        updatedate,
      </if>
      <if test="insertdate != null">
        insertdate,
      </if>
      <if test="number != null">
        `number`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookname != null">
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="auto != null">
        #{auto,jdbcType=VARCHAR},
      </if>
      <if test="updatedate != null">
        #{updatedate,jdbcType=DATE},
      </if>
      <if test="insertdate != null">
        #{insertdate,jdbcType=DATE},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.boot.bootlanuch.entity.core.TBookInfoExample" resultType="java.lang.Long">
    select count(*) from t_book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_book_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookname != null">
        bookname = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.auto != null">
        auto = #{record.auto,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedate != null">
        updatedate = #{record.updatedate,jdbcType=DATE},
      </if>
      <if test="record.insertdate != null">
        insertdate = #{record.insertdate,jdbcType=DATE},
      </if>
      <if test="record.number != null">
        `number` = #{record.number,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_book_info
    set id = #{record.id,jdbcType=INTEGER},
      bookname = #{record.bookname,jdbcType=VARCHAR},
      auto = #{record.auto,jdbcType=VARCHAR},
      updatedate = #{record.updatedate,jdbcType=DATE},
      insertdate = #{record.insertdate,jdbcType=DATE},
      `number` = #{record.number,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.boot.bootlanuch.entity.core.TBookInfo">
    update t_book_info
    <set>
      <if test="bookname != null">
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="auto != null">
        auto = #{auto,jdbcType=VARCHAR},
      </if>
      <if test="updatedate != null">
        updatedate = #{updatedate,jdbcType=DATE},
      </if>
      <if test="insertdate != null">
        insertdate = #{insertdate,jdbcType=DATE},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boot.bootlanuch.entity.core.TBookInfo">
    update t_book_info
    set bookname = #{bookname,jdbcType=VARCHAR},
      auto = #{auto,jdbcType=VARCHAR},
      updatedate = #{updatedate,jdbcType=DATE},
      insertdate = #{insertdate,jdbcType=DATE},
      `number` = #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>